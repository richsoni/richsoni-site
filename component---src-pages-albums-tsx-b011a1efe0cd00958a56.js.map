{"version":3,"sources":["webpack:///./src/pages/albums.tsx","webpack:///./src/pages/albumStyles.module.css"],"names":["styles","require","AlbumDisplay","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","list","children","AlbumIndex","render","_components_content___WEBPACK_IMPORTED_MODULE_2__","_components_Breadcrumbs___WEBPACK_IMPORTED_MODULE_3__","this","data","albums","edges","map","node","_components_AlbumArtwork___WEBPACK_IMPORTED_MODULE_4__","overlay","clickable","key","id","item","React","Component","query","module","exports"],"mappings":"0OAIMA,EAASC,EAAQ,KAKjBC,EAAe,SAACC,GACpB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAOQ,MAC3BL,EAAMM,WAcUC,4FACnBC,kBACE,OAAOP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACLR,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAD,gBAEFT,EAAAC,EAAAC,cAACJ,EAAD,KACGY,KAAKX,MAAMY,KAAKC,OAAOC,MAAMC,IAAI,SAACb,GAAD,OAAOA,EAAEc,OAAMD,IAAI,SAACb,GACpD,OAAOD,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAcC,SAAS,EAAMC,WAAW,EAAMC,IAAKlB,EAAEmB,GAAIjB,UAAWP,EAAOyB,KAAMV,KAAMV,YARhEqB,IAAMC,WAejCC,EAAK,+BCvClBC,EAAAC,QAAA,CAAkBtB,KAAA,kCAAAiB,KAAA","file":"component---src-pages-albums-tsx-b011a1efe0cd00958a56.js","sourcesContent":["import React from \"react\";\nimport Content from '../components/content/';\nimport {Breadcrumbs} from '../components/Breadcrumbs/';\nimport {Breadcrumb} from '../components/Breadcrumbs/';\nconst styles = require('./albumStyles.module.css');\nimport AlbumArtwork from '../components/AlbumArtwork/';\nimport { graphql } from \"gatsby\"\nimport { Albums } from '../data/albums';\n\nconst AlbumDisplay = (props: any) => {\n  return <div className={styles.list}>\n    {props.children}\n  </div>\n}\n\ntype Props = {\n  data: {\n    albums: Albums\n  }\n}\n\ntype State = {\n\n}\n\nexport default class AlbumIndex extends React.Component<Props, State> {\n  render(){\n    return <Content>\n      <Breadcrumbs>\n        <Breadcrumb>Albums</Breadcrumb>\n      </Breadcrumbs>\n      <AlbumDisplay>\n        {this.props.data.albums.edges.map((a) => a.node).map((a) => {\n          return <AlbumArtwork overlay={true} clickable={true} key={a.id} className={styles.item} data={a} />\n        })}\n      </AlbumDisplay>\n    </Content>\n  }\n}\n\nexport const query = graphql`\n  query {\n    albums: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___released_on] }\n      filter: { fields: { relativeDirectory: {eq: \"albums\"}  }}\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            releaseYear: released_on(formatString: \"YYYY\")\n          }\n          fields {\n            url\n            basename\n          }\n        }\n      }\n    }\n\n}\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"albumStyles-module--list--1roYR\",\"item\":\"albumStyles-module--item--ylBZ_\"};"],"sourceRoot":""}