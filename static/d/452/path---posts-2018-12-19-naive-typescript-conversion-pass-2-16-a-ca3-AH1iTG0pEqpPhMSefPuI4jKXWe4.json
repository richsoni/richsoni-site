{"data":{"markdownRemark":{"html":"<h1>Parameters</h1>\n<ol>\n<li>Merge within: ~1 hour (small amount of work)</li>\n<li>Must include: a post with content from this document</li>\n<li>Must include: A commit with some converted Typescript files</li>\n</ol>\n<h1>Strategy</h1>\n<ol>\n<li>Convert files importing only libraries</li>\n<li>Import files importing only tsc converted files</li>\n</ol>\n<h1>Outcome</h1>\n<pre><code>$ ./scripts/typescript-vs-javascript\n46% (19 Typescript / 22 Javascript)\n</code></pre>\n<h2>Summary Of Changes</h2>\n<p>I was able to convert 13 of the 35 remaining files in this pass.</p>\n<pre><code>$ git log --stat\ncommit c54a26b2608725c1943c8861ddbd907f053a60f9\nAuthor: Rich Soni &#x3C;rich@richsoni.com>\nDate:   Tue Dec 18 23:04:39 2018 -0500\n\n    finish pass 2\n\n package.json                                               |  4 ++\n src/components/AlbumArtwork/{index.js => index.tsx}        |  5 +-\n src/components/AlbumMediaCard/{index.js => index.tsx}      |  6 +-\n src/components/BaseMeta/{index.js => index.tsx}            |  2 +-\n src/components/Breadcrumbs/{index.jsx => index.tsx}        |  6 +-\n src/components/Half/index.js                               | 10 ----\n src/components/Half/index.tsx                              | 18 ++++++\n src/components/LatestRelease/{index.js => index.jsx}       |  0\n src/components/Table/{index.js => index.tsx}               | 84 ++++++++++++++--------------\n src/components/Tabs/index.js                               | 29 ----------\n src/components/Tabs/index.tsx                              | 37 ++++++++++++\n src/posts/2018-12-19-naive-typescript-conversion-pass-2.md |  5 +-\n yarn.lock                                                  | 29 ++++++++++\n 13 files changed, 142 insertions(+), 93 deletions(-)\n</code></pre>\n<h2>Learnings</h2>\n<p>This section outlines a few key things I learned during this pass of the migration.</p>\n<h3>Importing Type Definitions</h3>\n<p><code>3:32 Could not find a declaration file for module 'react-image-fallback'. '/Users/rsoni/code/personal/richsoni.github.io/node_modules/react-image-fallback/lib/index.js' implicitly has an 'any' type.</code>\nFirst and foremost, I had a few <code>@types</code> files to install:\n<a href=\"https://blog.angular-university.io/typescript-2-type-system-how-do-type-definitions-work-in-npm-when-to-use-types-and-why-what-are-compiler-opt-in-types/\">https://blog.angular-university.io/typescript-2-type-system-how-do-type-definitions-work-in-npm-when-to-use-types-and-why-what-are-compiler-opt-in-types/</a></p>\n<pre><code>$ git diff master -- package.json\ndiff --git a/package.json b/package.json\nindex 4560e16..10c70f4 100644\n--- a/package.json\n+++ b/package.json\n@@ -12,6 +12,10 @@\n     \"tsc:watch\": \"tsc --noEmit --watch\"\n   },\n   \"dependencies\": {\n+    \"@types/react\": \"^16.7.17\",\n+    \"@types/react-dom\": \"^16.0.11\",\n+    \"@types/react-helmet\": \"^5.0.7\",\n+    \"@types/react-image-fallback\": \"^8.0.0\",\n     \"fs-exists-sync\": \"^0.1.0\",\n     \"gatsby\": \"^2.0.0\",\n     \"gatsby-link\": \"^2.0.7\",\n</code></pre>\n<h3>Simple Types In React</h3>\n<p>Types in React require a bit of cooercion, even after adding the custom types for <code>react</code> and <code>react-dom</code>.\nConsider as an example a simple file from the commit:</p>\n<pre><code>$ git diff master -- src/components/Half/index.tsx\ndiff --git a/src/components/Half/index.tsx b/src/components/Half/index.tsx\nnew file mode 100644\nindex 0000000..d59e551\n--- /dev/null\n+++ b/src/components/Half/index.tsx\n@@ -0,0 +1,18 @@\n+import React from \"react\";\n+const styles = require('./styles.module.css');\n+\n+type Props = {\n+  style: any,\n+}\n+\n+type State = {\n+\n+}\n+\n+export default class Half extends React.Component&#x3C;Props, State>{\n+  render(){\n+    return &#x3C;section className={styles.half} style={this.props.style}>\n+      {this.props.children}\n+    &#x3C;/section>\n+  }\n+}\n</code></pre>\n<h3>Import CSS Modules</h3>\n<p>Some of my files also required custom Typing to be generated.\nIn other commits I was able to avoid this, but it seemed like some of the more complicated files where going to need a custom type definition.</p>\n<pre><code>$ git diff master -- src/components/Tabs/index.tsx\n\ndiff --git a/src/components/Tabs/index.tsx b/src/components/Tabs/index.tsx\nnew file mode 100644\nindex 0000000..b763d43\n--- /dev/null\n+++ b/src/components/Tabs/index.tsx\n@@ -0,0 +1,37 @@\n+import React from \"react\"\n+const styles = require('./styles.module.css')\n+\n+const initialState = { activeTab: 0 }\n+type State = Readonly&#x3C;typeof initialState>\n+\n+type TabsType = {\n+  content: () => JSX.Element,\n+  title: string\n+}\n+\n+type Props = {\n+  tabs: Array&#x3C;TabsType>\n+}\n+\n+export default class Tabs extends React.Component&#x3C;Props, State> {\n+  readonly state: State = initialState\n+\n+  render() {\n+    //...the code\n+  }\n+}\n</code></pre>","frontmatter":{"title":"Naive Typescript Conversion on RichSoni.com: Pass 2","hero":"/images/posts/gatsby-logo.jpg"},"fields":{"date":"2018-12-19"}}},"pageContext":{"url":"/posts/2018-12-19-naive-typescript-conversion-pass-2/"}}