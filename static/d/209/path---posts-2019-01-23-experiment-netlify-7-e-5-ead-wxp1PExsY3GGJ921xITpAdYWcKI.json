{"data":{"markdownRemark":{"html":"<h1>Netlify</h1>\n<p> <strong><em><a href=\"https://www.netlify.com/\">Netlify</a>: \"An all-in-one workflow that combines global deployment, continuous integration, and automatic HTTPS. And that‚Äôs just the beginning\"</em></strong></p>\n<p><a href=\"https://www.netlify.com/\">Netlify</a> has been a popular static site hosting provider since around 2016 See (  </p>\n<ul>\n<li><a href=\"https://news.ycombinator.com/item?id=13021722\">Ask HN: What free or low-cost static site hosting do you use most?</a></li>\n<li><a href=\"https://www.savjee.be/2017/10/Static-website-hosting-who-is-fastest/\">Static website hosting: who's fastest? AWS, Google, Firebase, Netlify or GitHub?</a></li>\n<li><a href=\"https://www.slant.co/topics/2256/~best-static-website-hosting-provider\">What is the best static website hosting provider?</a></li>\n</ul>\n<p>); </p>\n<h1>‚öî Github Pages vs. Netlify</h1>\n<p>This site, has been hosted on <a href=\"https://pages.github.com/\">Github Pages</a> since 2013 (<em>See '<a href=\"/posts/2013-12-03-how-i-use-github-pages-to-host-my-blog/\">How I Use Github Pages to Host My Blog</a>'</em>).\nI am currently satisfied with using it as a hosting option for a site of this scale.\nHowever, some more complex projects may require the more sophisticated features offered by <a href=\"https://www.netlify.com/\">Netlify</a>.</p>\n<p>These features are outlined here: <em>'<a href=\"https://www.netlify.com/github-pages-vs-netlify/\">GITHUB PAGES VS. NETLIFY</a>: Netlify is the upgrade you're looking for'</em>:</p>\n<table>\n  <thead> <tr><th align=\"center\"></th> <th align=\"center\">GithubPages</th><th align=\"center\">Netlify</th> </tr> </thead> \n<tbody>\n<tr>\n<td align=\"center\">Build Limits</td>\n<td align=\"center\">10 Builds per hour</td>\n<td align=\"center\">3 Builds per minute</td>\n</tr>\n<tr>\n<td align=\"center\">1-click Rollbacks</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Asset Optimizations</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Form Handling</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Deploy Previews</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Continuous Deployment</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Custom Rewrites &amp; Redirects</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Compatible w/All Static Site Generators</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Prerendering</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Split Testing</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n<tr>\n<td align=\"center\">Lambda Functions Integration</td>\n<td align=\"center\">‚ùå</td>\n<td align=\"center\">‚úÖ</td>\n</tr>\n</tbody>\n</table>\n<p>Given the potential to use these features in other projects, I decided to give <a href=\"https://www.netlify.com/\">Netlify</a> a whirl üå¨.</p>\n<h1>üõ≥ Initial Deploy</h1>\n<p><a href=\"https://www.netlify.com/blog/2016/09/29/a-step-by-step-guide-deploying-on-netlify/\">A Step-by-Step Guide: Deploying on Netlify</a> outlines a straightforward process for deploying a site to Netlify.\nThis article sufficed for me, except for one small hiccup I ran into when Netlify tried to build my site.</p>\n<h2>Cannot Resolve Module</h2>\n<p>My first build spit out this error:</p>\n<pre><code>9:52:49 PM:   Error: ./src/pages/posts.tsx\n9:52:49 PM:   Module not found: Error: Can't resolve '../components/content/' in '/opt/build  /repo/src/pages'\n9:52:49 PM:   resolve '../components/content/' in '/opt/build/repo/src/pages'\n</code></pre>\n<p>Indeed my while <code>posts.tsx</code> was looking for a file called <code>../components/content/</code>, the file actually was named <code>../components/Content/</code>:</p>\n<pre><code>$ head -n1 src/pages/posts.tsx\nimport Content from '../components/content/'\n\n$ ls src/components/\nAlbumArtwork    FixedMenu       Logo            Table\nAlbumMediaCard  Footer          MailingListHalf Tabs\nBaseMeta        Half            MenuToggle      disqus\nBreadcrumbs     LatestRelease   OverlayMenu\n*Content*         Layout          ResponsiveMenu\nEventIndex      LocationMap.tsx SocialButton\n</code></pre>\n<p>On MacOS this type of casing mismatch is acceptable.  However, the <a href=\"https://github.com/netlify/build-image\">netlify-build-image</a> requiers Ubuntu which respects directory casing.\nThis issue took me a while to identify, so its worth considering prevention options:\n[] Typescript: <a href=\"https://palantir.github.io/tslint/rules/file-name-casing/\">file-name-casing</a> rule would prevent, and automatically fix these issues in the future\n[] Using the <a href=\"https://github.com/netlify/build-image\">netlify-build-image</a> to develop could have identified this issue more quickly</p>\n<h1>Deploy Complete!</h1>\n<p>The site is located here: <a href=\"https://richsoni.netlify.com/\">https://richsoni.netlify.com/</a></p>\n<p>It was that easy!</p>\n<h1>Debugging with the netlify-build-image</h1>\n<p>When researching prevention tactics for the casing mismatch error I faced, I found this library: <a href=\"https://github.com/netlify/build-image\">netlify-build-image</a>.\nThe ability to locally build that container, and debug issues seems very valuable to me.\nIn the past, I have wasted a lot of time by redeploying changing up to the CI server when trying to fix a build.\nSo, I decided to check <a href=\"https://github.com/netlify/build-image\">netlify-build-image</a> out.</p>\n<h2>Setup</h2>\n<p>The instructions for <a href=\"https://github.com/netlify/build-image\">netlify-build-image</a> are fairly clear, and simple:\nI followed <a href=\"https://github.com/netlify/build-image#testing-locally\">Testing Locally</a>, and pulled the docker image:</p>\n<pre><code>docker pull netlify/build\n</code></pre>\n<p>However, there was one thing that was not clear in the instructions:\n<em>It was not clear that you had to clone the [netlify/build-image] repository</em>.</p>\n<p>I opened a Pull Request (<a href=\"https://github.com/netlify/build-image/pull/252\">https://github.com/netlify/build-image/pull/252</a>) with the tool to make the instructions more clear.\nHopefully they take the suggestions.</p>\n<h2>The Build</h2>\n<p>Since my build worked on Netlify, I expected to run <code>build yarn build</code> in the container without any issues.\nThis was inded the case:</p>\n<pre><code>~/code/github/netlify/build-image(master)------------------------------------------------------------------------\n$ ./test-tools/start-image.sh ~/code/personal/richsoni.github.io\nbuildbot@46702c0a6065:/$ build yarn build\n...(Docker running the build)\nCaching artifacts\nStarted saving node modules\nFinished saving node modules\nStarted saving yarn cache\nFinished saving yarn cache\nCached node version v9.11.2\n</code></pre>\n<h3>Reproducing the error</h3>\n<p>One thing to note from the README for <a href=\"https://github.com/netlify/build-image\">netlify-build-image</a> is the code to be tested needs to be committed tk.\nI added the error back:</p>\n<pre><code>//./src/pages/posts.tsx\nimport Content from '../components/content/'\n</code></pre>\n<p>Voila, the error is reproduced:</p>\n<pre><code>$ ./test-tools/start-image.sh ~/code/personal/richsoni.github.io       buildbot@50750cae5d63:/$ build yarn build\nCloning into '/opt/buildhome/repo'...\n... Other Output\n  Error: ./src/pages/posts.tsx\n  Module not found: Error: Can't resolve '../components/content/' in '/  opt/buildhome/repo/src/pages'\n...\n</code></pre>\n<h1>Depending on @netlify/build-image</h1>\n<p>The <a href=\"https://github.com/netlify/build-image\">netlify-build-image</a> is published as a <a href=\"https://github.com/netlify/build-image/blob/master/package.json\">public npm project</a>.</p>\n<p>So, it can be added to a project as a <code>devDependency</code>:</p>\n<pre><code>yarn add --dev netlify/build-image\n</code></pre>\n<h1>Wrapping <code>@netlify/build-image</code></h1>\n<p>I wrote two scripts to wrap this library:</p>\n<pre><code>$ cat script/netlify-build\n#!/usr/bin/env bash\nif git diff-index --quiet HEAD --; then\n  PROJECT_DIR=`pwd`\n  : ${1?\"Usage: $0 First Argument must be the build command to run in the Netlify Image\"}\n  cd node_modules/@netlify/build-image\n  ./test-tools/test-build.sh $PROJECT_DIR 'npm run bootstrap_and_build'\nelse\n  echo \"Can only run this command with a clean git directory\"\nfi\n\n$ cat script/netlify-start-image\n#!/usr/bin/env bash\nif git diff-index --quiet HEAD --; then\n  PROJECT_DIR=`pwd`\n  cd node_modules/@netlify/build-image\n  ./test-tools/start-image.sh $PROJECT_DIR\nelse\n  echo \"Can only run this command with a clean git directory\"\nfi\n</code></pre>\n<p>The way I use them is described in the <code>package.json</code>:</p>\n<pre><code>$ cat package.json | grep 'netlify:build'\n  \"netlify:build\": \"./script/netlify-build 'npm run build'\",\n  \"netlify:start-image\": \"./script/netlify-start-image\"\n</code></pre>\n<p>This allows me to interact with the <a href=\"https://github.com/netlify/build-image\">netlify-build-image</a> in a few different ways:</p>\n<pre><code># Testing the build\n$ yarn run netlify:build\n=> $ ./script/netlify-build 'npm run build'\n... {OUTPUT}\n‚ú®  Done in 406.96s.\n</code></pre>\n<p>If additional debugging is needed, I can open a server: <code>yarn run netlify:start-image</code> and use the <code>build</code> command: <code>build 'yarn run netlify:build'</code></p>\n<p>Behind</p>\n<p>And, if further debugging </p>\n<p>I also created corresponding scripts for starting an image shell:</p>\n<pre><code>$ cat script/netlify-start-image\n\n#!/usr/bin/env bash\nDIR=`pwd`\ncd node_modules/@netlify/build-image\n./test-tools/start-image.sh $DIR\n\n$ cat package.json | grep 'netlify:start-image'\n\"netlify:start-image\": \"./script/netlify-start-image\"\n</code></pre>\n<p>And a shell can be accessed via:</p>\n<pre><code>yarn run netlify:start-image\n</code></pre>","frontmatter":{"title":"Building Richsoni.com with Netlify","hero":"/images/posts/2019-01-28-netlify-richsoni.png"},"fields":{"date":"2019-01-23"}}},"pageContext":{"url":"/posts/2019-01-23-experiment-netlify/"}}