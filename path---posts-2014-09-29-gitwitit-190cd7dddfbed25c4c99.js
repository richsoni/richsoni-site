webpackJsonp([0xbf414457c10b],{557:function(t,e){t.exports={data:{markdownRemark:{html:"<h1>Git Up, Git Out</h1>\n<p><code>commit</code> and <code>init</code> are two of git's slickest sounding commands.\nOf its <strong>155</strong> commands (in v2.2.1), there are only <strong>5</strong> that rhyme: <strong><em>commit</em></strong>, <em>cvsexportcommit</em>, <strong><em>init</em></strong> <em>verify-commit</em>, <em>mailsplit</em>.\n<em>Commit</em> and <em>Init</em> are the only two employed frequently by the average user.</p>\n<p>The word <em>Git</em> has many rhymes.\nDespite this, the program lacks rhyming commands, and is in desperate need of some swagg.\n<em>Git-WitIt</em> provides 27 proxy rhymes for git commands, and that is a beautiful thang.</p>\n<h1>Take Notes On How I Grep't</h1>\n<div style='display:flex'>\n  <table>\n    <tbody>\n      <tr> <td><code>admit</code></td>  <td>merge</td>       </tr>\n      <tr> <td><code>aquit</code></td>  <td>blame</td>       </tr>\n      <tr> <td><code>befit</code></td>  <td>cherry-pick</td> </tr>\n      <tr> <td><code>bit</code></td>    <td>grep</td>        </tr>\n      <tr> <td><code>chit</code></td>   <td>shortlog</td>    </tr>\n      <tr> <td><code>emit</code></td>   <td>push</td>        </tr>\n      <tr> <td><code>fit</code></td>    <td>rerere</td>      </tr>\n      <tr> <td><code>flit</code></td>   <td>stash</td>       </tr>\n      <tr> <td><code>it</code></td>     <td>checkout</td>    </tr>\n      <tr> <td><code>kit</code></td>    <td>config</td>      </tr>\n      <tr> <td><code>knit</code></td>   <td>rebase</td>      </tr>\n      <tr> <td><code>legit</code></td>  <td>pull</td>        </tr>\n      <tr> <td><code>mitt</code></td>   <td>fetch</td>  </tr>\n    </tbody>\n  </table>\n  <table>\n    <tbody>\n      <tr> <td><code>nit</code></td>    <td>prune</td>  </tr>\n      <tr> <td><code>omit</code></td>   <td>rm</td>     </tr>\n      <tr> <td><code>permit</code></td> <td>add</td>    </tr>\n      <tr> <td><code>pit</code></td>    <td>bisect</td> </tr>\n      <tr> <td><code>refit</code></td>  <td>clone</td>  </tr>\n      <tr> <td><code>remit</code></td>  <td>diff</td>   </tr>\n      <tr> <td><code>shit</code></td>   <td>revert</td> </tr>\n      <tr> <td><code>sit</code></td>    <td>tag</td>    </tr>\n      <tr> <td><code>skit</code></td>   <td>log</td>    </tr>\n      <tr> <td><code>split</code></td>  <td>branch</td> </tr>\n      <tr> <td><code>sprit</code></td>  <td>mv</td>     </tr>\n      <tr> <td><code>unfit</code></td>  <td>reset</td>  </tr>\n      <tr> <td><code>witit</code></td>  <td>status</td> </tr>\n      <tr> <td><code>writ</code></td>   <td>reflog</td> </tr>\n    </tbody>\n  </table>\n</div>\n<h3>...Go Ahead And Marinate On That For A Minute</h3>\n<h1>Put The Two And Two Together (Installation)</h1>\n<p>The easiest way to <em>Git-WitIt</em>:</p>\n<pre><code>$ cd any/folder\n$ wget https://raw.githubusercontent.com/richsoni/git-witit/master/gitwitit.ini\n$ git config --global --add include.path `pwd`/gitwitit.inc\n</code></pre>\n<p>Test it by typing <code>git witit</code> in a git repository.</p>\n<p>Thats it!!! Enjoy using <em>Git-WitIt</em>.</p>\n<h2>Dirty Details</h2>\n<p>The above steps should seamlessly install <em>Git-WitIt</em>, but some environments may need customization.\nHere are the dirty details, for exotic set up situations.</p>\n<h3>gitwitit.ini</h3>\n<p>Save it to some place, or even include it right inside of your <code>.gitconfig</code></p>\n<pre><code>;; gitwitit.ini ;;\n[alias]\n  admit=merge\n  aquit=blame\n  befit=cherry-pick\n  bit=grep\n  chit=shortlog\n  emit=push\n  fit=rerere\n  flit=stash\n  it=checkout\n  kit=config\n  knit=rebase\n  legit=pull\n  mitt=fetch\n  nit=prune\n  omit=rm\n  permit=add\n  pit=bisect\n  refit=clone\n  remit=diff\n  shit=revert\n  sit=tag\n  skit=log\n  split=branch\n  sprit=mv\n  unfit=reset\n  witit=status\n  writ=reflog\n</code></pre>\n<h3>Include The File</h3>\n<p>To include it, the <code>.gitconfig</code> needs an include pointing to the path:</p>\n<pre><code>;;.gitconfig;;\n...\n[include]\n  path=~/dotfiles/git/gitwitit.ini;\n...\n</code></pre>",frontmatter:{title:"Git-WitIt: Spice Up Your Git Config With These Rhyming Aliases"},fields:{date:"2014-09-29"}}},pathContext:{slug:"/posts/2014-09-29-gitwitit/"}}}});
//# sourceMappingURL=path---posts-2014-09-29-gitwitit-190cd7dddfbed25c4c99.js.map